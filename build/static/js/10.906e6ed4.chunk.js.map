{"version":3,"sources":["axiosConfig.js","containers/Register/register.js"],"names":["instance","axios","create","baseURL","interceptors","request","use","data","FormData","queryString","stringify","arrayFormat","error","Promise","reject","response","Register","props","inputHandler","event","setState","changed","target","name","value","console","log","moment","format","dateInputHandler","submitHandler","e","preventDefault","state","password","confirmPassword","NotificationManager","dataBody","email","fullName","fullname","rollNo","roll_No","address","schoolName","schoolAddress","dateOfBirth","method","url","then","ack","success","message","setTimeout","window","location","href","catch","err","Date","className","md","onSubmit","this","addonType","type","placeholder","autoComplete","onChange","required","min","subtract","max","xs","color","React","Component"],"mappings":"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","file":"static/js/10.906e6ed4.chunk.js","sourcesContent":["import axios from \"axios\";\nimport queryString from \"qs\";\n\nconst instance = axios.create({\n  baseURL: \"http://localhost:4000\"\n});\n\ninstance.interceptors.request.use(\n  request => {\n    if (request.data instanceof FormData) return request;\n    request.data = queryString.stringify(request.data, {\n      arrayFormat: \"repeat\"\n    });\n    return request;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\n\ninstance.interceptors.response.use(\n  response => {\n    return response;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\n\nexport default instance;\n\n","import React from \"react\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardGroup,\n  Col,\n  Container,\n  Form,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Row,\n  NavLink,\n} from \"reactstrap\";\nimport axios from \"../../axiosConfig\";\nimport moment from \"moment\";\nimport { NotificationManager } from \"react-notifications\";\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      fullname: \"\",\n      roll_No: \"\",\n      address: \"\",\n      schoolName: \"\",\n      schoolAddress: \"\",\n      dateOfBirth: new Date(),\n      password: \"\",\n      confirmPassword: \"\",\n      changed: false,\n    };\n  }\n\n  inputHandler = (event) => {\n    this.setState({ changed: true });\n    this.setState({ [event.target.name]: event.target.value });\n    console.log(moment().format(\"YYYY-MM-DD\"));\n  };\n\n  dateInputHandler = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  submitHandler = (e) => {\n    e.preventDefault();\n    if (this.state.password !== this.state.confirmPassword) {\n      NotificationManager.error(\"Password Mismatch\");\n    } else {\n      const dataBody = {\n        email: this.state.email,\n        fullName: this.state.fullname,\n        rollNo: this.state.roll_No,\n        address: this.state.address,\n        schoolName: this.state.schoolName,\n        schoolAddress: this.state.schoolAddress,\n        dateOfBirth: this.state.dateOfBirth,\n        password: this.state.password,\n      };\n      axios({\n        method: \"POST\",\n        url: \"/registerProfile\",\n        data: dataBody,\n      })\n        .then((response) => {\n          if (response.data.ack === 1) {\n            NotificationManager.success(response.data.message);\n            setTimeout(() => {\n              window.location.href = \"/login\";\n            }, 500);\n          } else if (response.data.ack === 0) {\n            NotificationManager.error(response.data.message);\n          }\n        })\n        .catch((err) => {\n          NotificationManager.error(err.message);\n        });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"app flex-row align-items-center\">\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col md=\"6\">\n              <CardGroup>\n                <Card className=\"p-4\">\n                  <CardBody>\n                    <Form onSubmit={this.submitHandler}>\n                      <h1>Register</h1>\n                      <p className=\"text-muted\">Fill up the Details</p>\n                      <h6>Your Personal Email</h6>\n                      <InputGroup className=\"mb-3\">\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"fa fa-envelope-open-o\"></i>\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input\n                          type=\"email\"\n                          name=\"email\"\n                          placeholder=\"Email\"\n                          autoComplete=\"email\"\n                          onChange={this.inputHandler}\n                          required\n                        />\n                      </InputGroup>\n                      <h6>Your Name</h6>\n                      <InputGroup className=\"mb-3\">\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"icon-user\"></i>\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input\n                          type=\"text\"\n                          name=\"fullname\"\n                          placeholder=\"Full Name\"\n                          onChange={this.inputHandler}\n                          required\n                        />\n                      </InputGroup>\n                      <h6>Your Roll No.</h6>\n                      <InputGroup className=\"mb-3\">\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"fa fa-id-card\"></i>\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input\n                          type=\"text\"\n                          name=\"roll_No\"\n                          placeholder=\"Roll No.\"\n                          onChange={this.inputHandler}\n                          required\n                        />\n                      </InputGroup>\n                      <h6>Residential Address</h6>\n                      <InputGroup className=\"mb-3\">\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"fa fa-address-book\"></i>\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input\n                          type=\"text\"\n                          name=\"address\"\n                          placeholder=\"Address\"\n                          onChange={this.inputHandler}\n                          required\n                        />\n                      </InputGroup>\n                      <h6>Date of Birth</h6>\n                      <InputGroup className=\"mb-3\">\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"cui-calendar icons\"></i>\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input\n                          type=\"date\"\n                          name=\"dateOfBirth\"\n                          onChange={this.dateInputHandler}\n                          min={moment().subtract(60,'years').format(\"YYYY-MM-DD\")}\n                          max={moment().format(\"YYYY-MM-DD\")}\n                          required\n                        />\n                      </InputGroup>\n                      <h6>Your School Name</h6>\n                      <InputGroup className=\"mb-3\">\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"fa fa-bandcamp\"></i>\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input\n                          type=\"text\"\n                          name=\"schoolName\"\n                          placeholder=\"School Name\"\n                          onChange={this.inputHandler}\n                          required\n                        />\n                      </InputGroup>\n                      <h6>Your School Address</h6>\n                      <InputGroup className=\"mb-3\">\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"fa fa-address-book\"></i>\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input\n                          type=\"text\"\n                          name=\"schoolAddress\"\n                          placeholder=\"School Address\"\n                          onChange={this.inputHandler}\n                          required\n                        />\n                      </InputGroup>\n                      <h6>New Password</h6>\n                      <InputGroup className=\"mb-4\">\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"icon-lock\"></i>\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input\n                          type=\"password\"\n                          name=\"password\"\n                          placeholder=\"Password\"\n                          onChange={this.inputHandler}\n                          autoComplete=\"current-password\"\n                          required\n                        />\n                      </InputGroup>\n                      <h6>Confirm Password</h6>\n                      <InputGroup className=\"mb-4\">\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"icon-lock\"></i>\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input\n                          type=\"password\"\n                          name=\"confirmPassword\"\n                          placeholder=\"Retype Password\"\n                          onChange={this.inputHandler}\n                          autoComplete=\"current-password\"\n                          required\n                        />\n                      </InputGroup>\n                      <Row>\n                        <Col xs=\"6\">\n                          <Button\n                            type=\"submit\"\n                            color=\"primary\"\n                            className=\"px-4\"\n                          >\n                            Sign Up\n                          </Button>\n                        </Col>\n                        <Col xs=\"6\" className=\"text-right\">\n                          <NavLink href=\"/login\"> Sign In</NavLink>\n                        </Col>\n                      </Row>\n                    </Form>\n                  </CardBody>\n                </Card>\n              </CardGroup>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\nexport default Register;\n"],"sourceRoot":""}